openapi: 3.0.3
info:
  title: Bazar Matias API
  version: 1.0.0
  description: no description
paths:
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /api/auth/logoutall/:
    post:
      operationId: auth_logoutall_create
      description: |-
        Log the user out of all sessions
        I.E. deletes all auth tokens for the user
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /api/inventory/products/:
    get:
      operationId: inventory_products_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: supplier
        schema:
          type: string
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: inventory_products_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/inventory/products/{id}/:
    get:
      operationId: inventory_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: inventory_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: inventory_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: inventory_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/inventory/shrinkages/:
    get:
      operationId: inventory_shrinkages_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShrinkageList'
          description: ''
    post:
      operationId: inventory_shrinkages_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shrinkage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shrinkage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shrinkage'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shrinkage'
          description: ''
  /api/inventory/shrinkages/{id}/:
    get:
      operationId: inventory_shrinkages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shrinkage.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shrinkage'
          description: ''
    put:
      operationId: inventory_shrinkages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shrinkage.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shrinkage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shrinkage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shrinkage'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shrinkage'
          description: ''
    patch:
      operationId: inventory_shrinkages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shrinkage.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShrinkage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShrinkage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShrinkage'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shrinkage'
          description: ''
    delete:
      operationId: inventory_shrinkages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shrinkage.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/inventory/supplies/:
    get:
      operationId: inventory_supplies_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplyList'
          description: ''
    post:
      operationId: inventory_supplies_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supply'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
          description: ''
  /api/inventory/supplies/{id}/:
    get:
      operationId: inventory_supplies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supply.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
          description: ''
    put:
      operationId: inventory_supplies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supply.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supply'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
          description: ''
    patch:
      operationId: inventory_supplies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supply.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupply'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
          description: ''
    delete:
      operationId: inventory_supplies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supply.
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sales/clients/:
    get:
      operationId: sales_clients_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientList'
          description: ''
    post:
      operationId: sales_clients_create
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/sales/clients/{id}/:
    get:
      operationId: sales_clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: sales_clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: sales_clients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: sales_clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sales/sales/:
    get:
      operationId: sales_sales_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSaleList'
          description: ''
    post:
      operationId: sales_sales_create
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
  /api/sales/sales/{id}/:
    get:
      operationId: sales_sales_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    put:
      operationId: sales_sales_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    patch:
      operationId: sales_sales_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSale'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: ''
    delete:
      operationId: sales_sales_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sale.
        required: true
      tags:
      - sales
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/suppliers/buy_orders/:
    get:
      operationId: suppliers_buy_orders_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBuyOrderList'
          description: ''
    post:
      operationId: suppliers_buy_orders_create
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BuyOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BuyOrder'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOrder'
          description: ''
  /api/suppliers/buy_orders/{id}/:
    get:
      operationId: suppliers_buy_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this buy order.
        required: true
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOrder'
          description: ''
    put:
      operationId: suppliers_buy_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this buy order.
        required: true
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BuyOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BuyOrder'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOrder'
          description: ''
    patch:
      operationId: suppliers_buy_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this buy order.
        required: true
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBuyOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBuyOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBuyOrder'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOrder'
          description: ''
    delete:
      operationId: suppliers_buy_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this buy order.
        required: true
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/suppliers/suppliers/:
    get:
      operationId: suppliers_suppliers_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: suppliers_suppliers_create
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/suppliers/suppliers/{id}/:
    get:
      operationId: suppliers_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: suppliers_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: suppliers_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: suppliers_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - suppliers
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/users/:
    get:
      operationId: users_users_list
      description: Lista usuarios con paginación, búsqueda y filtros
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_users_create
      description: Crea un nuevo usuario
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users-activity/:
    get:
      operationId: users_users_activity_list
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
          enum:
          - CREATE
          - DELETE
          - LOGIN
          - LOGOUT
          - OTHER
          - UPDATE
          - VIEW
        description: |-
          * `CREATE` - Crear
          * `UPDATE` - Actualizar
          * `DELETE` - Eliminar
          * `VIEW` - Ver
          * `LOGIN` - Iniciar sesión
          * `LOGOUT` - Cerrar sesión
          * `OTHER` - Otro
      - in: query
        name: content_type
        schema:
          type: integer
      - in: query
        name: data__status_type
        schema:
          type: string
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: date__range_after
        schema:
          type: string
          format: date
      - in: query
        name: date__range_before
        schema:
          type: string
          format: date
      - in: query
        name: date__year__gt
        schema:
          type: number
      - in: query
        name: date__year__lt
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserActivityList'
          description: ''
  /api/users/users-activity/{id}/:
    get:
      operationId: users_users_activity_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Actividad de usuario.
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivity'
          description: ''
  /api/users/users/{national_id}/:
    get:
      operationId: users_users_retrieve
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_users_update
      description: Actualiza un usuario existente
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_users_partial_update
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_users_destroy
      description: Elimina un usuario
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /api/users/users/change-password/:
    post:
      operationId: users_users_change_password_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/me/:
    get:
      operationId: users_users_me_retrieve
      description: Endpoint adicional para obtener datos del usuario autenticado
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/metrics/:
    get:
      operationId: users_users_metrics_retrieve
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    ActionTypeEnum:
      enum:
      - CREATE
      - UPDATE
      - DELETE
      - VIEW
      - LOGIN
      - LOGOUT
      - OTHER
      type: string
      description: |-
        * `CREATE` - Crear
        * `UPDATE` - Actualizar
        * `DELETE` - Eliminar
        * `VIEW` - Ver
        * `LOGIN` - Iniciar sesión
        * `LOGOUT` - Cerrar sesión
        * `OTHER` - Otro
    BuyOrder:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/BuyOrderDetail'
        net_amount:
          type: integer
        iva:
          type: integer
        total_amount:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Status Buy Order
        created_at:
          type: string
          format: date-time
          readOnly: true
        supplier:
          type: string
          maxLength: 100
      required:
      - created_at
      - details
      - id
      - supplier
    BuyOrderDetail:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        product:
          type: string
          maxLength: 100
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        unit_price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - product
      - unit_price
    Client:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        national_id:
          type: string
          maxLength: 12
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 12
      required:
      - first_name
      - id
      - last_name
      - national_id
    DocumentTypeEnum:
      enum:
      - FAC
      - BOL
      type: string
      description: |-
        * `FAC` - Factura
        * `BOL` - Boleta
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    PaginatedBuyOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BuyOrder'
    PaginatedClientList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Client'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedSaleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
    PaginatedShrinkageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shrinkage'
    PaginatedSupplierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    PaginatedSupplyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supply'
    PaginatedUserActivityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserActivity'
    PatchedBuyOrder:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/BuyOrderDetail'
        net_amount:
          type: integer
        iva:
          type: integer
        total_amount:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Status Buy Order
        created_at:
          type: string
          format: date-time
          readOnly: true
        supplier:
          type: string
          maxLength: 100
    PatchedClient:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        national_id:
          type: string
          maxLength: 12
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 12
    PatchedProduct:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        price_clp:
          type: number
          format: double
        iva:
          type: boolean
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: string
          maxLength: 100
        supplier:
          type: string
          maxLength: 100
        data:
          nullable: true
    PatchedSale:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/SaleDetail'
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        folio:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        net_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        iva:
          type: integer
          readOnly: true
        total_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        client:
          type: integer
          nullable: true
    PatchedShrinkage:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        product:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 50
        observation:
          type: string
          nullable: true
    PatchedSupplier:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        rut:
          type: string
          maxLength: 13
        category:
          type: string
          maxLength: 100
    PatchedSupply:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        stock:
          type: integer
        name:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 50
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 12
        formatted_national_id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        position:
          type: string
          maxLength: 100
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PaymentMethodEnum:
      enum:
      - EF
      - TC
      - TD
      - TR
      - OT
      type: string
      description: |-
        * `EF` - Efectivo
        * `TC` - Tarjeta Crédito
        * `TD` - Tarjeta Débito
        * `TR` - Transferencia
        * `OT` - Otro
    Product:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        price_clp:
          type: number
          format: double
        iva:
          type: boolean
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: string
          maxLength: 100
        supplier:
          type: string
          maxLength: 100
        data:
          nullable: true
      required:
      - category
      - id
      - name
      - price_clp
      - stock
      - supplier
    Sale:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/SaleDetail'
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        folio:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        net_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        iva:
          type: integer
          readOnly: true
        total_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        client:
          type: integer
          nullable: true
      required:
      - created_at
      - details
      - folio
      - id
      - iva
      - net_amount
      - total_amount
    SaleDetail:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        unit_price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        discount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - product
      - unit_price
    Shrinkage:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        product:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 50
        observation:
          type: string
          nullable: true
      required:
      - category
      - id
      - price
      - product
      - quantity
    StatusEnum:
      enum:
      - RE
      - PE
      - AP
      type: string
      description: |-
        * `RE` - Rechazado
        * `PE` - Pendiente
        * `AP` - Aprobado
    Supplier:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        rut:
          type: string
          maxLength: 13
        category:
          type: string
          maxLength: 100
      required:
      - address
      - category
      - email
      - id
      - name
      - phone
      - rut
    Supply:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        stock:
          type: integer
        name:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 50
      required:
      - category
      - id
      - name
      - stock
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 12
        formatted_national_id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        position:
          type: string
          maxLength: 100
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - email
      - formatted_national_id
      - id
      - is_active
      - is_staff
      - national_id
      - position
    UserActivity:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        description:
          type: string
        content_type:
          type: integer
          nullable: true
        object_id:
          type: string
          readOnly: true
        data:
          nullable: true
        ip_address:
          type: string
          nullable: true
        user_agent:
          type: string
          nullable: true
        date:
          type: string
          format: date
          readOnly: true
        time:
          type: string
          format: time
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - action_type
      - date
      - description
      - id
      - object_id
      - time
      - timestamp
      - user
  securitySchemes:
    knoxApiToken:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
