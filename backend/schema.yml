openapi: 3.0.3
info:
  title: Bazar Matias API
  version: 1.0.0
  description: no description
paths:
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /api/auth/logoutall/:
    post:
      operationId: auth_logoutall_create
      description: |-
        Log the user out of all sessions
        I.E. deletes all auth tokens for the user
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /api/inventory/products/:
    get:
      operationId: inventory_products_list
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: inventory_products_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/inventory/products/{id}/:
    get:
      operationId: inventory_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: inventory_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: inventory_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/inventory/suppliers/:
    get:
      operationId: inventory_suppliers_list
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: inventory_suppliers_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/inventory/suppliers/{id}/:
    get:
      operationId: inventory_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: inventory_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: inventory_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - inventory
      security:
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/users/:
    get:
      operationId: users_users_list
      description: Lista usuarios con paginación, búsqueda y filtros
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_users_create
      description: Crea un nuevo usuario
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users-activity/:
    get:
      operationId: users_users_activity_list
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
          enum:
          - CREATE
          - DELETE
          - LOGIN
          - LOGOUT
          - OTHER
          - UPDATE
          - VIEW
        description: |-
          * `CREATE` - Crear
          * `UPDATE` - Actualizar
          * `DELETE` - Eliminar
          * `VIEW` - Ver
          * `LOGIN` - Iniciar sesión
          * `LOGOUT` - Cerrar sesión
          * `OTHER` - Otro
      - in: query
        name: content_type
        schema:
          type: integer
      - in: query
        name: data__status_type
        schema:
          type: string
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: date__range_after
        schema:
          type: string
          format: date
      - in: query
        name: date__range_before
        schema:
          type: string
          format: date
      - in: query
        name: date__year__gt
        schema:
          type: number
      - in: query
        name: date__year__lt
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserActivityList'
          description: ''
  /api/users/users-activity/{id}/:
    get:
      operationId: users_users_activity_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Actividad de usuario.
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivity'
          description: ''
  /api/users/users/{national_id}/:
    get:
      operationId: users_users_retrieve
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_users_update
      description: Actualiza un usuario existente
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_users_partial_update
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_users_destroy
      description: Elimina un usuario
      parameters:
      - in: path
        name: national_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /api/users/users/change-password/:
    post:
      operationId: users_users_change_password_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/me/:
    get:
      operationId: users_users_me_retrieve
      description: Endpoint adicional para obtener datos del usuario autenticado
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    ActionTypeEnum:
      enum:
      - CREATE
      - UPDATE
      - DELETE
      - VIEW
      - LOGIN
      - LOGOUT
      - OTHER
      type: string
      description: |-
        * `CREATE` - Crear
        * `UPDATE` - Actualizar
        * `DELETE` - Eliminar
        * `VIEW` - Ver
        * `LOGIN` - Iniciar sesión
        * `LOGOUT` - Cerrar sesión
        * `OTHER` - Otro
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    PaginatedUserActivityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserActivity'
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 12
        formatted_national_id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        position:
          type: string
          maxLength: 100
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    Product:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          pattern: ^[a-zA-Z0-9\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00f1\u00d1
            ]+$
          maxLength: 255
        price_clp:
          type: number
          format: double
          minimum: 0.01
        stock:
          type: integer
          minimum: 0
        category:
          type: string
          pattern: ^[a-zA-Z\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00f1\u00d1
            ]+$
          maxLength: 100
        supplier_id:
          type: string
          description: ID del proveedor asociado a este producto
      required:
      - category
      - id
      - name
      - price_clp
      - stock
      - supplier_id
    Supplier:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          pattern: ^[a-zA-Z0-9\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00f1\u00d1
            ]+$
          maxLength: 255
        address:
          type: string
          pattern: ^[a-zA-Z0-9\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00f1\u00d1
            ,.#-]+$
          maxLength: 255
        phone:
          type: string
          pattern: ^\+?[0-9]{9,15}$
          maxLength: 20
        email:
          type: string
          format: email
        rut:
          type: string
          pattern: ^[0-9]{1,2}\.?[0-9]{3}\.?[0-9]{3}-[0-9kK]{1}$
          maxLength: 13
        category:
          type: string
          pattern: ^[a-zA-Z\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00f1\u00d1
            ]+$
          maxLength: 100
      required:
      - address
      - category
      - email
      - id
      - name
      - phone
      - rut
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        national_id:
          type: string
          maxLength: 12
        formatted_national_id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        position:
          type: string
          maxLength: 100
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - email
      - formatted_national_id
      - id
      - is_active
      - is_staff
      - national_id
      - position
    UserActivity:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        description:
          type: string
        content_type:
          type: integer
          nullable: true
        object_id:
          type: string
          readOnly: true
        data:
          nullable: true
        ip_address:
          type: string
          nullable: true
        user_agent:
          type: string
          nullable: true
        date:
          type: string
          format: date
          readOnly: true
        time:
          type: string
          format: time
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - action_type
      - date
      - description
      - id
      - object_id
      - time
      - timestamp
      - user
  securitySchemes:
    knoxApiToken:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
