
services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - network

  # MongoDB Express (gestor web para MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
       - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
    depends_on:
      - mongodb
    networks:
      - network

  # Backend - DRF
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    volumes:
      - ./backend:/backend
    ports:
      - "${BACKEND_PORT}:4000"
    environment:
      - DEBUG=${DEBUG}
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
    depends_on:
      - mongodb
    networks:
      - network

  # Frontend - React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT}/api
    depends_on:
      - backend
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  mongo-data:
    driver: local